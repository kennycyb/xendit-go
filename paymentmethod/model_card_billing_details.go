/*
Payment Method Service v2

This API is used for Payment Method Service v2

API version: 2.79.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentmethod

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the CardBillingDetails type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CardBillingDetails{}

// CardBillingDetails Card Billing Details
type CardBillingDetails struct {
	FirstName NullableString `json:"first_name,omitempty"`
	LastName NullableString `json:"last_name,omitempty"`
	Email NullableString `json:"email,omitempty"`
	Phone NullableString `json:"phone,omitempty"`
	AddressLine1 NullableString `json:"address_line_1,omitempty"`
	AddressLine2 NullableString `json:"address_line_2,omitempty"`
	AddressCity NullableString `json:"address_city,omitempty"`
	AddressCountry NullableString `json:"address_country,omitempty"`
	AddressPostalCode NullableString `json:"address_postal_code,omitempty"`
	AddressState NullableString `json:"address_state,omitempty"`
	GivenNames NullableString `json:"given_names,omitempty"`
	MiddleName NullableString `json:"middle_name,omitempty"`
	Surname NullableString `json:"surname,omitempty"`
	MobileNumber NullableString `json:"mobile_number,omitempty"`
	PhoneNumber NullableString `json:"phone_number,omitempty"`
	Address NullableCardBillingDetailsAddress `json:"address,omitempty"`
}

// NewCardBillingDetails instantiates a new CardBillingDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardBillingDetails() *CardBillingDetails {
	this := CardBillingDetails{}
	return &this
}

// NewCardBillingDetailsWithDefaults instantiates a new CardBillingDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardBillingDetailsWithDefaults() *CardBillingDetails {
	this := CardBillingDetails{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetFirstName() string {
	if o == nil || utils.IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *CardBillingDetails) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *CardBillingDetails) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *CardBillingDetails) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *CardBillingDetails) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetLastName() string {
	if o == nil || utils.IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *CardBillingDetails) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *CardBillingDetails) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *CardBillingDetails) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *CardBillingDetails) UnsetLastName() {
	o.LastName.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetEmail() string {
	if o == nil || utils.IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *CardBillingDetails) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *CardBillingDetails) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *CardBillingDetails) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *CardBillingDetails) UnsetEmail() {
	o.Email.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetPhone() string {
	if o == nil || utils.IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *CardBillingDetails) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *CardBillingDetails) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *CardBillingDetails) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *CardBillingDetails) UnsetPhone() {
	o.Phone.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetAddressLine1() string {
	if o == nil || utils.IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *CardBillingDetails) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *CardBillingDetails) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *CardBillingDetails) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *CardBillingDetails) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetAddressLine2() string {
	if o == nil || utils.IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *CardBillingDetails) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *CardBillingDetails) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *CardBillingDetails) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *CardBillingDetails) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetAddressCity returns the AddressCity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetAddressCity() string {
	if o == nil || utils.IsNil(o.AddressCity.Get()) {
		var ret string
		return ret
	}
	return *o.AddressCity.Get()
}

// GetAddressCityOk returns a tuple with the AddressCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetAddressCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressCity.Get(), o.AddressCity.IsSet()
}

// HasAddressCity returns a boolean if a field has been set.
func (o *CardBillingDetails) HasAddressCity() bool {
	if o != nil && o.AddressCity.IsSet() {
		return true
	}

	return false
}

// SetAddressCity gets a reference to the given NullableString and assigns it to the AddressCity field.
func (o *CardBillingDetails) SetAddressCity(v string) {
	o.AddressCity.Set(&v)
}
// SetAddressCityNil sets the value for AddressCity to be an explicit nil
func (o *CardBillingDetails) SetAddressCityNil() {
	o.AddressCity.Set(nil)
}

// UnsetAddressCity ensures that no value is present for AddressCity, not even an explicit nil
func (o *CardBillingDetails) UnsetAddressCity() {
	o.AddressCity.Unset()
}

// GetAddressCountry returns the AddressCountry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetAddressCountry() string {
	if o == nil || utils.IsNil(o.AddressCountry.Get()) {
		var ret string
		return ret
	}
	return *o.AddressCountry.Get()
}

// GetAddressCountryOk returns a tuple with the AddressCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetAddressCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressCountry.Get(), o.AddressCountry.IsSet()
}

// HasAddressCountry returns a boolean if a field has been set.
func (o *CardBillingDetails) HasAddressCountry() bool {
	if o != nil && o.AddressCountry.IsSet() {
		return true
	}

	return false
}

// SetAddressCountry gets a reference to the given NullableString and assigns it to the AddressCountry field.
func (o *CardBillingDetails) SetAddressCountry(v string) {
	o.AddressCountry.Set(&v)
}
// SetAddressCountryNil sets the value for AddressCountry to be an explicit nil
func (o *CardBillingDetails) SetAddressCountryNil() {
	o.AddressCountry.Set(nil)
}

// UnsetAddressCountry ensures that no value is present for AddressCountry, not even an explicit nil
func (o *CardBillingDetails) UnsetAddressCountry() {
	o.AddressCountry.Unset()
}

// GetAddressPostalCode returns the AddressPostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetAddressPostalCode() string {
	if o == nil || utils.IsNil(o.AddressPostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.AddressPostalCode.Get()
}

// GetAddressPostalCodeOk returns a tuple with the AddressPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetAddressPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressPostalCode.Get(), o.AddressPostalCode.IsSet()
}

// HasAddressPostalCode returns a boolean if a field has been set.
func (o *CardBillingDetails) HasAddressPostalCode() bool {
	if o != nil && o.AddressPostalCode.IsSet() {
		return true
	}

	return false
}

// SetAddressPostalCode gets a reference to the given NullableString and assigns it to the AddressPostalCode field.
func (o *CardBillingDetails) SetAddressPostalCode(v string) {
	o.AddressPostalCode.Set(&v)
}
// SetAddressPostalCodeNil sets the value for AddressPostalCode to be an explicit nil
func (o *CardBillingDetails) SetAddressPostalCodeNil() {
	o.AddressPostalCode.Set(nil)
}

// UnsetAddressPostalCode ensures that no value is present for AddressPostalCode, not even an explicit nil
func (o *CardBillingDetails) UnsetAddressPostalCode() {
	o.AddressPostalCode.Unset()
}

// GetAddressState returns the AddressState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetAddressState() string {
	if o == nil || utils.IsNil(o.AddressState.Get()) {
		var ret string
		return ret
	}
	return *o.AddressState.Get()
}

// GetAddressStateOk returns a tuple with the AddressState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetAddressStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressState.Get(), o.AddressState.IsSet()
}

// HasAddressState returns a boolean if a field has been set.
func (o *CardBillingDetails) HasAddressState() bool {
	if o != nil && o.AddressState.IsSet() {
		return true
	}

	return false
}

// SetAddressState gets a reference to the given NullableString and assigns it to the AddressState field.
func (o *CardBillingDetails) SetAddressState(v string) {
	o.AddressState.Set(&v)
}
// SetAddressStateNil sets the value for AddressState to be an explicit nil
func (o *CardBillingDetails) SetAddressStateNil() {
	o.AddressState.Set(nil)
}

// UnsetAddressState ensures that no value is present for AddressState, not even an explicit nil
func (o *CardBillingDetails) UnsetAddressState() {
	o.AddressState.Unset()
}

// GetGivenNames returns the GivenNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetGivenNames() string {
	if o == nil || utils.IsNil(o.GivenNames.Get()) {
		var ret string
		return ret
	}
	return *o.GivenNames.Get()
}

// GetGivenNamesOk returns a tuple with the GivenNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetGivenNamesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GivenNames.Get(), o.GivenNames.IsSet()
}

// HasGivenNames returns a boolean if a field has been set.
func (o *CardBillingDetails) HasGivenNames() bool {
	if o != nil && o.GivenNames.IsSet() {
		return true
	}

	return false
}

// SetGivenNames gets a reference to the given NullableString and assigns it to the GivenNames field.
func (o *CardBillingDetails) SetGivenNames(v string) {
	o.GivenNames.Set(&v)
}
// SetGivenNamesNil sets the value for GivenNames to be an explicit nil
func (o *CardBillingDetails) SetGivenNamesNil() {
	o.GivenNames.Set(nil)
}

// UnsetGivenNames ensures that no value is present for GivenNames, not even an explicit nil
func (o *CardBillingDetails) UnsetGivenNames() {
	o.GivenNames.Unset()
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetMiddleName() string {
	if o == nil || utils.IsNil(o.MiddleName.Get()) {
		var ret string
		return ret
	}
	return *o.MiddleName.Get()
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetMiddleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MiddleName.Get(), o.MiddleName.IsSet()
}

// HasMiddleName returns a boolean if a field has been set.
func (o *CardBillingDetails) HasMiddleName() bool {
	if o != nil && o.MiddleName.IsSet() {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given NullableString and assigns it to the MiddleName field.
func (o *CardBillingDetails) SetMiddleName(v string) {
	o.MiddleName.Set(&v)
}
// SetMiddleNameNil sets the value for MiddleName to be an explicit nil
func (o *CardBillingDetails) SetMiddleNameNil() {
	o.MiddleName.Set(nil)
}

// UnsetMiddleName ensures that no value is present for MiddleName, not even an explicit nil
func (o *CardBillingDetails) UnsetMiddleName() {
	o.MiddleName.Unset()
}

// GetSurname returns the Surname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetSurname() string {
	if o == nil || utils.IsNil(o.Surname.Get()) {
		var ret string
		return ret
	}
	return *o.Surname.Get()
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetSurnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Surname.Get(), o.Surname.IsSet()
}

// HasSurname returns a boolean if a field has been set.
func (o *CardBillingDetails) HasSurname() bool {
	if o != nil && o.Surname.IsSet() {
		return true
	}

	return false
}

// SetSurname gets a reference to the given NullableString and assigns it to the Surname field.
func (o *CardBillingDetails) SetSurname(v string) {
	o.Surname.Set(&v)
}
// SetSurnameNil sets the value for Surname to be an explicit nil
func (o *CardBillingDetails) SetSurnameNil() {
	o.Surname.Set(nil)
}

// UnsetSurname ensures that no value is present for Surname, not even an explicit nil
func (o *CardBillingDetails) UnsetSurname() {
	o.Surname.Unset()
}

// GetMobileNumber returns the MobileNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetMobileNumber() string {
	if o == nil || utils.IsNil(o.MobileNumber.Get()) {
		var ret string
		return ret
	}
	return *o.MobileNumber.Get()
}

// GetMobileNumberOk returns a tuple with the MobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetMobileNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileNumber.Get(), o.MobileNumber.IsSet()
}

// HasMobileNumber returns a boolean if a field has been set.
func (o *CardBillingDetails) HasMobileNumber() bool {
	if o != nil && o.MobileNumber.IsSet() {
		return true
	}

	return false
}

// SetMobileNumber gets a reference to the given NullableString and assigns it to the MobileNumber field.
func (o *CardBillingDetails) SetMobileNumber(v string) {
	o.MobileNumber.Set(&v)
}
// SetMobileNumberNil sets the value for MobileNumber to be an explicit nil
func (o *CardBillingDetails) SetMobileNumberNil() {
	o.MobileNumber.Set(nil)
}

// UnsetMobileNumber ensures that no value is present for MobileNumber, not even an explicit nil
func (o *CardBillingDetails) UnsetMobileNumber() {
	o.MobileNumber.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetPhoneNumber() string {
	if o == nil || utils.IsNil(o.PhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CardBillingDetails) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *CardBillingDetails) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *CardBillingDetails) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *CardBillingDetails) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CardBillingDetails) GetAddress() CardBillingDetailsAddress {
	if o == nil || utils.IsNil(o.Address.Get()) {
		var ret CardBillingDetailsAddress
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CardBillingDetails) GetAddressOk() (*CardBillingDetailsAddress, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *CardBillingDetails) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableCardBillingDetailsAddress and assigns it to the Address field.
func (o *CardBillingDetails) SetAddress(v CardBillingDetailsAddress) {
	o.Address.Set(&v)
}
// SetAddressNil sets the value for Address to be an explicit nil
func (o *CardBillingDetails) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *CardBillingDetails) UnsetAddress() {
	o.Address.Unset()
}

func (o CardBillingDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardBillingDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstName.IsSet() {
		toSerialize["first_name"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["last_name"] = o.LastName.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.AddressLine1.IsSet() {
		toSerialize["address_line_1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["address_line_2"] = o.AddressLine2.Get()
	}
	if o.AddressCity.IsSet() {
		toSerialize["address_city"] = o.AddressCity.Get()
	}
	if o.AddressCountry.IsSet() {
		toSerialize["address_country"] = o.AddressCountry.Get()
	}
	if o.AddressPostalCode.IsSet() {
		toSerialize["address_postal_code"] = o.AddressPostalCode.Get()
	}
	if o.AddressState.IsSet() {
		toSerialize["address_state"] = o.AddressState.Get()
	}
	if o.GivenNames.IsSet() {
		toSerialize["given_names"] = o.GivenNames.Get()
	}
	if o.MiddleName.IsSet() {
		toSerialize["middle_name"] = o.MiddleName.Get()
	}
	if o.Surname.IsSet() {
		toSerialize["surname"] = o.Surname.Get()
	}
	if o.MobileNumber.IsSet() {
		toSerialize["mobile_number"] = o.MobileNumber.Get()
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phone_number"] = o.PhoneNumber.Get()
	}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	return toSerialize, nil
}

type NullableCardBillingDetails struct {
	value *CardBillingDetails
	isSet bool
}

func (v NullableCardBillingDetails) Get() *CardBillingDetails {
	return v.value
}

func (v *NullableCardBillingDetails) Set(val *CardBillingDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCardBillingDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCardBillingDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardBillingDetails(val *CardBillingDetails) *NullableCardBillingDetails {
	return &NullableCardBillingDetails{value: val, isSet: true}
}

func (v NullableCardBillingDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardBillingDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


