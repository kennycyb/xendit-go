/*
Payment Method Service v2

This API is used for Payment Method Service v2

API version: 2.79.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentmethod

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
	"time"
)

// checks if the InternalV1PatchPaymentMethod type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &InternalV1PatchPaymentMethod{}

// InternalV1PatchPaymentMethod struct for InternalV1PatchPaymentMethod
type InternalV1PatchPaymentMethod struct {
	Status *PaymentMethodStatus `json:"status,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
}

// NewInternalV1PatchPaymentMethod instantiates a new InternalV1PatchPaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalV1PatchPaymentMethod() *InternalV1PatchPaymentMethod {
	this := InternalV1PatchPaymentMethod{}
	return &this
}

// NewInternalV1PatchPaymentMethodWithDefaults instantiates a new InternalV1PatchPaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalV1PatchPaymentMethodWithDefaults() *InternalV1PatchPaymentMethod {
	this := InternalV1PatchPaymentMethod{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InternalV1PatchPaymentMethod) GetStatus() PaymentMethodStatus {
	if o == nil || utils.IsNil(o.Status) {
		var ret PaymentMethodStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1PatchPaymentMethod) GetStatusOk() (*PaymentMethodStatus, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InternalV1PatchPaymentMethod) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given PaymentMethodStatus and assigns it to the Status field.
func (o *InternalV1PatchPaymentMethod) SetStatus(v PaymentMethodStatus) {
	o.Status = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalV1PatchPaymentMethod) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalV1PatchPaymentMethod) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *InternalV1PatchPaymentMethod) HasMetadata() bool {
	if o != nil && utils.IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *InternalV1PatchPaymentMethod) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *InternalV1PatchPaymentMethod) GetUpdated() time.Time {
	if o == nil || utils.IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1PatchPaymentMethod) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *InternalV1PatchPaymentMethod) HasUpdated() bool {
	if o != nil && !utils.IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *InternalV1PatchPaymentMethod) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o InternalV1PatchPaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalV1PatchPaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if !utils.IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableInternalV1PatchPaymentMethod struct {
	value *InternalV1PatchPaymentMethod
	isSet bool
}

func (v NullableInternalV1PatchPaymentMethod) Get() *InternalV1PatchPaymentMethod {
	return v.value
}

func (v *NullableInternalV1PatchPaymentMethod) Set(val *InternalV1PatchPaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalV1PatchPaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalV1PatchPaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalV1PatchPaymentMethod(val *InternalV1PatchPaymentMethod) *NullableInternalV1PatchPaymentMethod {
	return &NullableInternalV1PatchPaymentMethod{value: val, isSet: true}
}

func (v NullableInternalV1PatchPaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalV1PatchPaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


