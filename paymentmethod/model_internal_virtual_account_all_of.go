/*
Payment Method Service v2

This API is used for Payment Method Service v2

API version: 2.79.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentmethod

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the InternalVirtualAccountAllOf type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &InternalVirtualAccountAllOf{}

// InternalVirtualAccountAllOf struct for InternalVirtualAccountAllOf
type InternalVirtualAccountAllOf struct {
	VirtualAccountId *string `json:"virtual_account_id,omitempty"`
	AlternativeDisplays []VirtualAccountAlternativeDisplay `json:"alternative_displays,omitempty"`
}

// NewInternalVirtualAccountAllOf instantiates a new InternalVirtualAccountAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalVirtualAccountAllOf() *InternalVirtualAccountAllOf {
	this := InternalVirtualAccountAllOf{}
	return &this
}

// NewInternalVirtualAccountAllOfWithDefaults instantiates a new InternalVirtualAccountAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalVirtualAccountAllOfWithDefaults() *InternalVirtualAccountAllOf {
	this := InternalVirtualAccountAllOf{}
	return &this
}

// GetVirtualAccountId returns the VirtualAccountId field value if set, zero value otherwise.
func (o *InternalVirtualAccountAllOf) GetVirtualAccountId() string {
	if o == nil || utils.IsNil(o.VirtualAccountId) {
		var ret string
		return ret
	}
	return *o.VirtualAccountId
}

// GetVirtualAccountIdOk returns a tuple with the VirtualAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalVirtualAccountAllOf) GetVirtualAccountIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.VirtualAccountId) {
		return nil, false
	}
	return o.VirtualAccountId, true
}

// HasVirtualAccountId returns a boolean if a field has been set.
func (o *InternalVirtualAccountAllOf) HasVirtualAccountId() bool {
	if o != nil && !utils.IsNil(o.VirtualAccountId) {
		return true
	}

	return false
}

// SetVirtualAccountId gets a reference to the given string and assigns it to the VirtualAccountId field.
func (o *InternalVirtualAccountAllOf) SetVirtualAccountId(v string) {
	o.VirtualAccountId = &v
}

// GetAlternativeDisplays returns the AlternativeDisplays field value if set, zero value otherwise.
func (o *InternalVirtualAccountAllOf) GetAlternativeDisplays() []VirtualAccountAlternativeDisplay {
	if o == nil || utils.IsNil(o.AlternativeDisplays) {
		var ret []VirtualAccountAlternativeDisplay
		return ret
	}
	return o.AlternativeDisplays
}

// GetAlternativeDisplaysOk returns a tuple with the AlternativeDisplays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalVirtualAccountAllOf) GetAlternativeDisplaysOk() ([]VirtualAccountAlternativeDisplay, bool) {
	if o == nil || utils.IsNil(o.AlternativeDisplays) {
		return nil, false
	}
	return o.AlternativeDisplays, true
}

// HasAlternativeDisplays returns a boolean if a field has been set.
func (o *InternalVirtualAccountAllOf) HasAlternativeDisplays() bool {
	if o != nil && !utils.IsNil(o.AlternativeDisplays) {
		return true
	}

	return false
}

// SetAlternativeDisplays gets a reference to the given []VirtualAccountAlternativeDisplay and assigns it to the AlternativeDisplays field.
func (o *InternalVirtualAccountAllOf) SetAlternativeDisplays(v []VirtualAccountAlternativeDisplay) {
	o.AlternativeDisplays = v
}

func (o InternalVirtualAccountAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalVirtualAccountAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.VirtualAccountId) {
		toSerialize["virtual_account_id"] = o.VirtualAccountId
	}
	if !utils.IsNil(o.AlternativeDisplays) {
		toSerialize["alternative_displays"] = o.AlternativeDisplays
	}
	return toSerialize, nil
}

type NullableInternalVirtualAccountAllOf struct {
	value *InternalVirtualAccountAllOf
	isSet bool
}

func (v NullableInternalVirtualAccountAllOf) Get() *InternalVirtualAccountAllOf {
	return v.value
}

func (v *NullableInternalVirtualAccountAllOf) Set(val *InternalVirtualAccountAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalVirtualAccountAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalVirtualAccountAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalVirtualAccountAllOf(val *InternalVirtualAccountAllOf) *NullableInternalVirtualAccountAllOf {
	return &NullableInternalVirtualAccountAllOf{value: val, isSet: true}
}

func (v NullableInternalVirtualAccountAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalVirtualAccountAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


