/*
Payment Method Service v2

This API is used for Payment Method Service v2

API version: 2.79.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentmethod

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
	"time"
)

// checks if the InternalV1CreatePaymentMethod type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &InternalV1CreatePaymentMethod{}

// InternalV1CreatePaymentMethod struct for InternalV1CreatePaymentMethod
type InternalV1CreatePaymentMethod struct {
	Id *string `json:"id,omitempty"`
	Type PaymentMethodType `json:"type"`
	Country *PaymentMethodCountry `json:"country,omitempty"`
	Status *PaymentMethodStatus `json:"status,omitempty"`
	BusinessId *string `json:"business_id,omitempty"`
	CustomerId NullableString `json:"customer_id,omitempty"`
	Reusability *PaymentMethodReusability `json:"reusability,omitempty"`
	Ewallet NullableInternalEwallet `json:"ewallet,omitempty"`
	DirectDebit NullableInternalDirectDebit `json:"direct_debit,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	InternalMetadata map[string]interface{} `json:"internal_metadata,omitempty"`
	Actions []PaymentMethodAction `json:"actions,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
}

// NewInternalV1CreatePaymentMethod instantiates a new InternalV1CreatePaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalV1CreatePaymentMethod(type_ PaymentMethodType) *InternalV1CreatePaymentMethod {
	this := InternalV1CreatePaymentMethod{}
	this.Type = type_
	return &this
}

// NewInternalV1CreatePaymentMethodWithDefaults instantiates a new InternalV1CreatePaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalV1CreatePaymentMethodWithDefaults() *InternalV1CreatePaymentMethod {
	this := InternalV1CreatePaymentMethod{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InternalV1CreatePaymentMethod) GetId() string {
	if o == nil || utils.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasId() bool {
	if o != nil && !utils.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InternalV1CreatePaymentMethod) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *InternalV1CreatePaymentMethod) GetType() PaymentMethodType {
	if o == nil {
		var ret PaymentMethodType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetTypeOk() (*PaymentMethodType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InternalV1CreatePaymentMethod) SetType(v PaymentMethodType) {
	o.Type = v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *InternalV1CreatePaymentMethod) GetCountry() PaymentMethodCountry {
	if o == nil || utils.IsNil(o.Country) {
		var ret PaymentMethodCountry
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetCountryOk() (*PaymentMethodCountry, bool) {
	if o == nil || utils.IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasCountry() bool {
	if o != nil && !utils.IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given PaymentMethodCountry and assigns it to the Country field.
func (o *InternalV1CreatePaymentMethod) SetCountry(v PaymentMethodCountry) {
	o.Country = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InternalV1CreatePaymentMethod) GetStatus() PaymentMethodStatus {
	if o == nil || utils.IsNil(o.Status) {
		var ret PaymentMethodStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetStatusOk() (*PaymentMethodStatus, bool) {
	if o == nil || utils.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasStatus() bool {
	if o != nil && !utils.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given PaymentMethodStatus and assigns it to the Status field.
func (o *InternalV1CreatePaymentMethod) SetStatus(v PaymentMethodStatus) {
	o.Status = &v
}

// GetBusinessId returns the BusinessId field value if set, zero value otherwise.
func (o *InternalV1CreatePaymentMethod) GetBusinessId() string {
	if o == nil || utils.IsNil(o.BusinessId) {
		var ret string
		return ret
	}
	return *o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetBusinessIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.BusinessId) {
		return nil, false
	}
	return o.BusinessId, true
}

// HasBusinessId returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasBusinessId() bool {
	if o != nil && !utils.IsNil(o.BusinessId) {
		return true
	}

	return false
}

// SetBusinessId gets a reference to the given string and assigns it to the BusinessId field.
func (o *InternalV1CreatePaymentMethod) SetBusinessId(v string) {
	o.BusinessId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalV1CreatePaymentMethod) GetCustomerId() string {
	if o == nil || utils.IsNil(o.CustomerId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalV1CreatePaymentMethod) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// HasCustomerId returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasCustomerId() bool {
	if o != nil && o.CustomerId.IsSet() {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given NullableString and assigns it to the CustomerId field.
func (o *InternalV1CreatePaymentMethod) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}
// SetCustomerIdNil sets the value for CustomerId to be an explicit nil
func (o *InternalV1CreatePaymentMethod) SetCustomerIdNil() {
	o.CustomerId.Set(nil)
}

// UnsetCustomerId ensures that no value is present for CustomerId, not even an explicit nil
func (o *InternalV1CreatePaymentMethod) UnsetCustomerId() {
	o.CustomerId.Unset()
}

// GetReusability returns the Reusability field value if set, zero value otherwise.
func (o *InternalV1CreatePaymentMethod) GetReusability() PaymentMethodReusability {
	if o == nil || utils.IsNil(o.Reusability) {
		var ret PaymentMethodReusability
		return ret
	}
	return *o.Reusability
}

// GetReusabilityOk returns a tuple with the Reusability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetReusabilityOk() (*PaymentMethodReusability, bool) {
	if o == nil || utils.IsNil(o.Reusability) {
		return nil, false
	}
	return o.Reusability, true
}

// HasReusability returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasReusability() bool {
	if o != nil && !utils.IsNil(o.Reusability) {
		return true
	}

	return false
}

// SetReusability gets a reference to the given PaymentMethodReusability and assigns it to the Reusability field.
func (o *InternalV1CreatePaymentMethod) SetReusability(v PaymentMethodReusability) {
	o.Reusability = &v
}

// GetEwallet returns the Ewallet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalV1CreatePaymentMethod) GetEwallet() InternalEwallet {
	if o == nil || utils.IsNil(o.Ewallet.Get()) {
		var ret InternalEwallet
		return ret
	}
	return *o.Ewallet.Get()
}

// GetEwalletOk returns a tuple with the Ewallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalV1CreatePaymentMethod) GetEwalletOk() (*InternalEwallet, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ewallet.Get(), o.Ewallet.IsSet()
}

// HasEwallet returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasEwallet() bool {
	if o != nil && o.Ewallet.IsSet() {
		return true
	}

	return false
}

// SetEwallet gets a reference to the given NullableInternalEwallet and assigns it to the Ewallet field.
func (o *InternalV1CreatePaymentMethod) SetEwallet(v InternalEwallet) {
	o.Ewallet.Set(&v)
}
// SetEwalletNil sets the value for Ewallet to be an explicit nil
func (o *InternalV1CreatePaymentMethod) SetEwalletNil() {
	o.Ewallet.Set(nil)
}

// UnsetEwallet ensures that no value is present for Ewallet, not even an explicit nil
func (o *InternalV1CreatePaymentMethod) UnsetEwallet() {
	o.Ewallet.Unset()
}

// GetDirectDebit returns the DirectDebit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalV1CreatePaymentMethod) GetDirectDebit() InternalDirectDebit {
	if o == nil || utils.IsNil(o.DirectDebit.Get()) {
		var ret InternalDirectDebit
		return ret
	}
	return *o.DirectDebit.Get()
}

// GetDirectDebitOk returns a tuple with the DirectDebit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalV1CreatePaymentMethod) GetDirectDebitOk() (*InternalDirectDebit, bool) {
	if o == nil {
		return nil, false
	}
	return o.DirectDebit.Get(), o.DirectDebit.IsSet()
}

// HasDirectDebit returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasDirectDebit() bool {
	if o != nil && o.DirectDebit.IsSet() {
		return true
	}

	return false
}

// SetDirectDebit gets a reference to the given NullableInternalDirectDebit and assigns it to the DirectDebit field.
func (o *InternalV1CreatePaymentMethod) SetDirectDebit(v InternalDirectDebit) {
	o.DirectDebit.Set(&v)
}
// SetDirectDebitNil sets the value for DirectDebit to be an explicit nil
func (o *InternalV1CreatePaymentMethod) SetDirectDebitNil() {
	o.DirectDebit.Set(nil)
}

// UnsetDirectDebit ensures that no value is present for DirectDebit, not even an explicit nil
func (o *InternalV1CreatePaymentMethod) UnsetDirectDebit() {
	o.DirectDebit.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalV1CreatePaymentMethod) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalV1CreatePaymentMethod) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasMetadata() bool {
	if o != nil && utils.IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *InternalV1CreatePaymentMethod) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetInternalMetadata returns the InternalMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalV1CreatePaymentMethod) GetInternalMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.InternalMetadata
}

// GetInternalMetadataOk returns a tuple with the InternalMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalV1CreatePaymentMethod) GetInternalMetadataOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.InternalMetadata) {
		return map[string]interface{}{}, false
	}
	return o.InternalMetadata, true
}

// HasInternalMetadata returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasInternalMetadata() bool {
	if o != nil && utils.IsNil(o.InternalMetadata) {
		return true
	}

	return false
}

// SetInternalMetadata gets a reference to the given map[string]interface{} and assigns it to the InternalMetadata field.
func (o *InternalV1CreatePaymentMethod) SetInternalMetadata(v map[string]interface{}) {
	o.InternalMetadata = v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *InternalV1CreatePaymentMethod) GetActions() []PaymentMethodAction {
	if o == nil || utils.IsNil(o.Actions) {
		var ret []PaymentMethodAction
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetActionsOk() ([]PaymentMethodAction, bool) {
	if o == nil || utils.IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasActions() bool {
	if o != nil && !utils.IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []PaymentMethodAction and assigns it to the Actions field.
func (o *InternalV1CreatePaymentMethod) SetActions(v []PaymentMethodAction) {
	o.Actions = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *InternalV1CreatePaymentMethod) GetCreated() time.Time {
	if o == nil || utils.IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetCreatedOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasCreated() bool {
	if o != nil && !utils.IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *InternalV1CreatePaymentMethod) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *InternalV1CreatePaymentMethod) GetUpdated() time.Time {
	if o == nil || utils.IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalV1CreatePaymentMethod) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || utils.IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *InternalV1CreatePaymentMethod) HasUpdated() bool {
	if o != nil && !utils.IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *InternalV1CreatePaymentMethod) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o InternalV1CreatePaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalV1CreatePaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["type"] = o.Type
	if !utils.IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !utils.IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !utils.IsNil(o.BusinessId) {
		toSerialize["business_id"] = o.BusinessId
	}
	if o.CustomerId.IsSet() {
		toSerialize["customer_id"] = o.CustomerId.Get()
	}
	if !utils.IsNil(o.Reusability) {
		toSerialize["reusability"] = o.Reusability
	}
	if o.Ewallet.IsSet() {
		toSerialize["ewallet"] = o.Ewallet.Get()
	}
	if o.DirectDebit.IsSet() {
		toSerialize["direct_debit"] = o.DirectDebit.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.InternalMetadata != nil {
		toSerialize["internal_metadata"] = o.InternalMetadata
	}
	if !utils.IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !utils.IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !utils.IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableInternalV1CreatePaymentMethod struct {
	value *InternalV1CreatePaymentMethod
	isSet bool
}

func (v NullableInternalV1CreatePaymentMethod) Get() *InternalV1CreatePaymentMethod {
	return v.value
}

func (v *NullableInternalV1CreatePaymentMethod) Set(val *InternalV1CreatePaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalV1CreatePaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalV1CreatePaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalV1CreatePaymentMethod(val *InternalV1CreatePaymentMethod) *NullableInternalV1CreatePaymentMethod {
	return &NullableInternalV1CreatePaymentMethod{value: val, isSet: true}
}

func (v NullableInternalV1CreatePaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalV1CreatePaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


