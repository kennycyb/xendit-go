/*
Payment Method Service v2

This API is used for Payment Method Service v2

API version: 2.79.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentmethod

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the CardBillingDetailsAddress type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CardBillingDetailsAddress{}

// CardBillingDetailsAddress Card Billing Details Address
type CardBillingDetailsAddress struct {
	Country *string `json:"country,omitempty"`
	StreetLine1 *string `json:"street_line1,omitempty"`
	StreetLine2 *string `json:"street_line2,omitempty"`
	City *string `json:"city,omitempty"`
	ProvinceState *string `json:"province_state,omitempty"`
	Province *string `json:"province,omitempty"`
	State *string `json:"state,omitempty"`
	PostalCode *string `json:"postal_code,omitempty"`
	Category *string `json:"category,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewCardBillingDetailsAddress instantiates a new CardBillingDetailsAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardBillingDetailsAddress() *CardBillingDetailsAddress {
	this := CardBillingDetailsAddress{}
	return &this
}

// NewCardBillingDetailsAddressWithDefaults instantiates a new CardBillingDetailsAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardBillingDetailsAddressWithDefaults() *CardBillingDetailsAddress {
	this := CardBillingDetailsAddress{}
	return &this
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetCountry() string {
	if o == nil || utils.IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetCountryOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasCountry() bool {
	if o != nil && !utils.IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CardBillingDetailsAddress) SetCountry(v string) {
	o.Country = &v
}

// GetStreetLine1 returns the StreetLine1 field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetStreetLine1() string {
	if o == nil || utils.IsNil(o.StreetLine1) {
		var ret string
		return ret
	}
	return *o.StreetLine1
}

// GetStreetLine1Ok returns a tuple with the StreetLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetStreetLine1Ok() (*string, bool) {
	if o == nil || utils.IsNil(o.StreetLine1) {
		return nil, false
	}
	return o.StreetLine1, true
}

// HasStreetLine1 returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasStreetLine1() bool {
	if o != nil && !utils.IsNil(o.StreetLine1) {
		return true
	}

	return false
}

// SetStreetLine1 gets a reference to the given string and assigns it to the StreetLine1 field.
func (o *CardBillingDetailsAddress) SetStreetLine1(v string) {
	o.StreetLine1 = &v
}

// GetStreetLine2 returns the StreetLine2 field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetStreetLine2() string {
	if o == nil || utils.IsNil(o.StreetLine2) {
		var ret string
		return ret
	}
	return *o.StreetLine2
}

// GetStreetLine2Ok returns a tuple with the StreetLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetStreetLine2Ok() (*string, bool) {
	if o == nil || utils.IsNil(o.StreetLine2) {
		return nil, false
	}
	return o.StreetLine2, true
}

// HasStreetLine2 returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasStreetLine2() bool {
	if o != nil && !utils.IsNil(o.StreetLine2) {
		return true
	}

	return false
}

// SetStreetLine2 gets a reference to the given string and assigns it to the StreetLine2 field.
func (o *CardBillingDetailsAddress) SetStreetLine2(v string) {
	o.StreetLine2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetCity() string {
	if o == nil || utils.IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetCityOk() (*string, bool) {
	if o == nil || utils.IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasCity() bool {
	if o != nil && !utils.IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CardBillingDetailsAddress) SetCity(v string) {
	o.City = &v
}

// GetProvinceState returns the ProvinceState field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetProvinceState() string {
	if o == nil || utils.IsNil(o.ProvinceState) {
		var ret string
		return ret
	}
	return *o.ProvinceState
}

// GetProvinceStateOk returns a tuple with the ProvinceState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetProvinceStateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ProvinceState) {
		return nil, false
	}
	return o.ProvinceState, true
}

// HasProvinceState returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasProvinceState() bool {
	if o != nil && !utils.IsNil(o.ProvinceState) {
		return true
	}

	return false
}

// SetProvinceState gets a reference to the given string and assigns it to the ProvinceState field.
func (o *CardBillingDetailsAddress) SetProvinceState(v string) {
	o.ProvinceState = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetProvince() string {
	if o == nil || utils.IsNil(o.Province) {
		var ret string
		return ret
	}
	return *o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetProvinceOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Province) {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasProvince() bool {
	if o != nil && !utils.IsNil(o.Province) {
		return true
	}

	return false
}

// SetProvince gets a reference to the given string and assigns it to the Province field.
func (o *CardBillingDetailsAddress) SetProvince(v string) {
	o.Province = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetState() string {
	if o == nil || utils.IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetStateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasState() bool {
	if o != nil && !utils.IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CardBillingDetailsAddress) SetState(v string) {
	o.State = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetPostalCode() string {
	if o == nil || utils.IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || utils.IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasPostalCode() bool {
	if o != nil && !utils.IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *CardBillingDetailsAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetCategory() string {
	if o == nil || utils.IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetCategoryOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasCategory() bool {
	if o != nil && !utils.IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *CardBillingDetailsAddress) SetCategory(v string) {
	o.Category = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CardBillingDetailsAddress) GetDescription() string {
	if o == nil || utils.IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardBillingDetailsAddress) GetDescriptionOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CardBillingDetailsAddress) HasDescription() bool {
	if o != nil && !utils.IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CardBillingDetailsAddress) SetDescription(v string) {
	o.Description = &v
}

func (o CardBillingDetailsAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardBillingDetailsAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !utils.IsNil(o.StreetLine1) {
		toSerialize["street_line1"] = o.StreetLine1
	}
	if !utils.IsNil(o.StreetLine2) {
		toSerialize["street_line2"] = o.StreetLine2
	}
	if !utils.IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !utils.IsNil(o.ProvinceState) {
		toSerialize["province_state"] = o.ProvinceState
	}
	if !utils.IsNil(o.Province) {
		toSerialize["province"] = o.Province
	}
	if !utils.IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !utils.IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !utils.IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !utils.IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableCardBillingDetailsAddress struct {
	value *CardBillingDetailsAddress
	isSet bool
}

func (v NullableCardBillingDetailsAddress) Get() *CardBillingDetailsAddress {
	return v.value
}

func (v *NullableCardBillingDetailsAddress) Set(val *CardBillingDetailsAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableCardBillingDetailsAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableCardBillingDetailsAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardBillingDetailsAddress(val *CardBillingDetailsAddress) *NullableCardBillingDetailsAddress {
	return &NullableCardBillingDetailsAddress{value: val, isSet: true}
}

func (v NullableCardBillingDetailsAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardBillingDetailsAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


