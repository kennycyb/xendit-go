/*
Payment Method Service v2

This API is used for Payment Method Service v2

API version: 2.79.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentmethod

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the MutableCard type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &MutableCard{}

// MutableCard struct for MutableCard
type MutableCard struct {
	Currency string `json:"currency"`
	ChannelProperties NullableCardChannelProperties `json:"channel_properties,omitempty"`
	CardInformation *TokenizedCardInformation `json:"card_information,omitempty"`
	CardVerificationResults NullableCardVerificationResults `json:"card_verification_results,omitempty"`
	Token *CardToken `json:"token,omitempty"`
}

// NewMutableCard instantiates a new MutableCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMutableCard(currency string) *MutableCard {
	this := MutableCard{}
	this.Currency = currency
	return &this
}

// NewMutableCardWithDefaults instantiates a new MutableCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMutableCardWithDefaults() *MutableCard {
	this := MutableCard{}
	return &this
}

// GetCurrency returns the Currency field value
func (o *MutableCard) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *MutableCard) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *MutableCard) SetCurrency(v string) {
	o.Currency = v
}

// GetChannelProperties returns the ChannelProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MutableCard) GetChannelProperties() CardChannelProperties {
	if o == nil || utils.IsNil(o.ChannelProperties.Get()) {
		var ret CardChannelProperties
		return ret
	}
	return *o.ChannelProperties.Get()
}

// GetChannelPropertiesOk returns a tuple with the ChannelProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MutableCard) GetChannelPropertiesOk() (*CardChannelProperties, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelProperties.Get(), o.ChannelProperties.IsSet()
}

// HasChannelProperties returns a boolean if a field has been set.
func (o *MutableCard) HasChannelProperties() bool {
	if o != nil && o.ChannelProperties.IsSet() {
		return true
	}

	return false
}

// SetChannelProperties gets a reference to the given NullableCardChannelProperties and assigns it to the ChannelProperties field.
func (o *MutableCard) SetChannelProperties(v CardChannelProperties) {
	o.ChannelProperties.Set(&v)
}
// SetChannelPropertiesNil sets the value for ChannelProperties to be an explicit nil
func (o *MutableCard) SetChannelPropertiesNil() {
	o.ChannelProperties.Set(nil)
}

// UnsetChannelProperties ensures that no value is present for ChannelProperties, not even an explicit nil
func (o *MutableCard) UnsetChannelProperties() {
	o.ChannelProperties.Unset()
}

// GetCardInformation returns the CardInformation field value if set, zero value otherwise.
func (o *MutableCard) GetCardInformation() TokenizedCardInformation {
	if o == nil || utils.IsNil(o.CardInformation) {
		var ret TokenizedCardInformation
		return ret
	}
	return *o.CardInformation
}

// GetCardInformationOk returns a tuple with the CardInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutableCard) GetCardInformationOk() (*TokenizedCardInformation, bool) {
	if o == nil || utils.IsNil(o.CardInformation) {
		return nil, false
	}
	return o.CardInformation, true
}

// HasCardInformation returns a boolean if a field has been set.
func (o *MutableCard) HasCardInformation() bool {
	if o != nil && !utils.IsNil(o.CardInformation) {
		return true
	}

	return false
}

// SetCardInformation gets a reference to the given TokenizedCardInformation and assigns it to the CardInformation field.
func (o *MutableCard) SetCardInformation(v TokenizedCardInformation) {
	o.CardInformation = &v
}

// GetCardVerificationResults returns the CardVerificationResults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MutableCard) GetCardVerificationResults() CardVerificationResults {
	if o == nil || utils.IsNil(o.CardVerificationResults.Get()) {
		var ret CardVerificationResults
		return ret
	}
	return *o.CardVerificationResults.Get()
}

// GetCardVerificationResultsOk returns a tuple with the CardVerificationResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MutableCard) GetCardVerificationResultsOk() (*CardVerificationResults, bool) {
	if o == nil {
		return nil, false
	}
	return o.CardVerificationResults.Get(), o.CardVerificationResults.IsSet()
}

// HasCardVerificationResults returns a boolean if a field has been set.
func (o *MutableCard) HasCardVerificationResults() bool {
	if o != nil && o.CardVerificationResults.IsSet() {
		return true
	}

	return false
}

// SetCardVerificationResults gets a reference to the given NullableCardVerificationResults and assigns it to the CardVerificationResults field.
func (o *MutableCard) SetCardVerificationResults(v CardVerificationResults) {
	o.CardVerificationResults.Set(&v)
}
// SetCardVerificationResultsNil sets the value for CardVerificationResults to be an explicit nil
func (o *MutableCard) SetCardVerificationResultsNil() {
	o.CardVerificationResults.Set(nil)
}

// UnsetCardVerificationResults ensures that no value is present for CardVerificationResults, not even an explicit nil
func (o *MutableCard) UnsetCardVerificationResults() {
	o.CardVerificationResults.Unset()
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *MutableCard) GetToken() CardToken {
	if o == nil || utils.IsNil(o.Token) {
		var ret CardToken
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MutableCard) GetTokenOk() (*CardToken, bool) {
	if o == nil || utils.IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *MutableCard) HasToken() bool {
	if o != nil && !utils.IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given CardToken and assigns it to the Token field.
func (o *MutableCard) SetToken(v CardToken) {
	o.Token = &v
}

func (o MutableCard) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MutableCard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	if o.ChannelProperties.IsSet() {
		toSerialize["channel_properties"] = o.ChannelProperties.Get()
	}
	if !utils.IsNil(o.CardInformation) {
		toSerialize["card_information"] = o.CardInformation
	}
	if o.CardVerificationResults.IsSet() {
		toSerialize["card_verification_results"] = o.CardVerificationResults.Get()
	}
	if !utils.IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableMutableCard struct {
	value *MutableCard
	isSet bool
}

func (v NullableMutableCard) Get() *MutableCard {
	return v.value
}

func (v *NullableMutableCard) Set(val *MutableCard) {
	v.value = val
	v.isSet = true
}

func (v NullableMutableCard) IsSet() bool {
	return v.isSet
}

func (v *NullableMutableCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutableCard(val *MutableCard) *NullableMutableCard {
	return &NullableMutableCard{value: val, isSet: true}
}

func (v NullableMutableCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutableCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


