/*
Payment Method Service v2

This API is used for Payment Method Service v2

API version: 2.79.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentmethod

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the InternalPaymentMethodAllOf type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &InternalPaymentMethodAllOf{}

// InternalPaymentMethodAllOf struct for InternalPaymentMethodAllOf
type InternalPaymentMethodAllOf struct {
	Ewallet NullableInternalEwallet `json:"ewallet,omitempty"`
	Card NullableInternalCard `json:"card,omitempty"`
	Cryptocurrency NullableInternalCrypto `json:"cryptocurrency,omitempty"`
	DirectBankTransfer NullableInternalDirectBankTransfer `json:"direct_bank_transfer,omitempty"`
	DirectDebit NullableInternalDirectDebit `json:"direct_debit,omitempty"`
	OverTheCounter NullableInternalOverTheCounter `json:"over_the_counter,omitempty"`
	VirtualAccount NullableInternalVirtualAccount `json:"virtual_account,omitempty"`
	QrCode NullableInternalQRCode `json:"qr_code,omitempty"`
	XCallbackUrl NullableString `json:"x-callback-url,omitempty"`
	ClientType NullableString `json:"client_type,omitempty"`
	InternalMetadata map[string]interface{} `json:"internal_metadata,omitempty"`
}

// NewInternalPaymentMethodAllOf instantiates a new InternalPaymentMethodAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalPaymentMethodAllOf() *InternalPaymentMethodAllOf {
	this := InternalPaymentMethodAllOf{}
	return &this
}

// NewInternalPaymentMethodAllOfWithDefaults instantiates a new InternalPaymentMethodAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalPaymentMethodAllOfWithDefaults() *InternalPaymentMethodAllOf {
	this := InternalPaymentMethodAllOf{}
	return &this
}

// GetEwallet returns the Ewallet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetEwallet() InternalEwallet {
	if o == nil || utils.IsNil(o.Ewallet.Get()) {
		var ret InternalEwallet
		return ret
	}
	return *o.Ewallet.Get()
}

// GetEwalletOk returns a tuple with the Ewallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetEwalletOk() (*InternalEwallet, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ewallet.Get(), o.Ewallet.IsSet()
}

// HasEwallet returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasEwallet() bool {
	if o != nil && o.Ewallet.IsSet() {
		return true
	}

	return false
}

// SetEwallet gets a reference to the given NullableInternalEwallet and assigns it to the Ewallet field.
func (o *InternalPaymentMethodAllOf) SetEwallet(v InternalEwallet) {
	o.Ewallet.Set(&v)
}
// SetEwalletNil sets the value for Ewallet to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetEwalletNil() {
	o.Ewallet.Set(nil)
}

// UnsetEwallet ensures that no value is present for Ewallet, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetEwallet() {
	o.Ewallet.Unset()
}

// GetCard returns the Card field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetCard() InternalCard {
	if o == nil || utils.IsNil(o.Card.Get()) {
		var ret InternalCard
		return ret
	}
	return *o.Card.Get()
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetCardOk() (*InternalCard, bool) {
	if o == nil {
		return nil, false
	}
	return o.Card.Get(), o.Card.IsSet()
}

// HasCard returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasCard() bool {
	if o != nil && o.Card.IsSet() {
		return true
	}

	return false
}

// SetCard gets a reference to the given NullableInternalCard and assigns it to the Card field.
func (o *InternalPaymentMethodAllOf) SetCard(v InternalCard) {
	o.Card.Set(&v)
}
// SetCardNil sets the value for Card to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetCardNil() {
	o.Card.Set(nil)
}

// UnsetCard ensures that no value is present for Card, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetCard() {
	o.Card.Unset()
}

// GetCryptocurrency returns the Cryptocurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetCryptocurrency() InternalCrypto {
	if o == nil || utils.IsNil(o.Cryptocurrency.Get()) {
		var ret InternalCrypto
		return ret
	}
	return *o.Cryptocurrency.Get()
}

// GetCryptocurrencyOk returns a tuple with the Cryptocurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetCryptocurrencyOk() (*InternalCrypto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cryptocurrency.Get(), o.Cryptocurrency.IsSet()
}

// HasCryptocurrency returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasCryptocurrency() bool {
	if o != nil && o.Cryptocurrency.IsSet() {
		return true
	}

	return false
}

// SetCryptocurrency gets a reference to the given NullableInternalCrypto and assigns it to the Cryptocurrency field.
func (o *InternalPaymentMethodAllOf) SetCryptocurrency(v InternalCrypto) {
	o.Cryptocurrency.Set(&v)
}
// SetCryptocurrencyNil sets the value for Cryptocurrency to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetCryptocurrencyNil() {
	o.Cryptocurrency.Set(nil)
}

// UnsetCryptocurrency ensures that no value is present for Cryptocurrency, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetCryptocurrency() {
	o.Cryptocurrency.Unset()
}

// GetDirectBankTransfer returns the DirectBankTransfer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetDirectBankTransfer() InternalDirectBankTransfer {
	if o == nil || utils.IsNil(o.DirectBankTransfer.Get()) {
		var ret InternalDirectBankTransfer
		return ret
	}
	return *o.DirectBankTransfer.Get()
}

// GetDirectBankTransferOk returns a tuple with the DirectBankTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetDirectBankTransferOk() (*InternalDirectBankTransfer, bool) {
	if o == nil {
		return nil, false
	}
	return o.DirectBankTransfer.Get(), o.DirectBankTransfer.IsSet()
}

// HasDirectBankTransfer returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasDirectBankTransfer() bool {
	if o != nil && o.DirectBankTransfer.IsSet() {
		return true
	}

	return false
}

// SetDirectBankTransfer gets a reference to the given NullableInternalDirectBankTransfer and assigns it to the DirectBankTransfer field.
func (o *InternalPaymentMethodAllOf) SetDirectBankTransfer(v InternalDirectBankTransfer) {
	o.DirectBankTransfer.Set(&v)
}
// SetDirectBankTransferNil sets the value for DirectBankTransfer to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetDirectBankTransferNil() {
	o.DirectBankTransfer.Set(nil)
}

// UnsetDirectBankTransfer ensures that no value is present for DirectBankTransfer, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetDirectBankTransfer() {
	o.DirectBankTransfer.Unset()
}

// GetDirectDebit returns the DirectDebit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetDirectDebit() InternalDirectDebit {
	if o == nil || utils.IsNil(o.DirectDebit.Get()) {
		var ret InternalDirectDebit
		return ret
	}
	return *o.DirectDebit.Get()
}

// GetDirectDebitOk returns a tuple with the DirectDebit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetDirectDebitOk() (*InternalDirectDebit, bool) {
	if o == nil {
		return nil, false
	}
	return o.DirectDebit.Get(), o.DirectDebit.IsSet()
}

// HasDirectDebit returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasDirectDebit() bool {
	if o != nil && o.DirectDebit.IsSet() {
		return true
	}

	return false
}

// SetDirectDebit gets a reference to the given NullableInternalDirectDebit and assigns it to the DirectDebit field.
func (o *InternalPaymentMethodAllOf) SetDirectDebit(v InternalDirectDebit) {
	o.DirectDebit.Set(&v)
}
// SetDirectDebitNil sets the value for DirectDebit to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetDirectDebitNil() {
	o.DirectDebit.Set(nil)
}

// UnsetDirectDebit ensures that no value is present for DirectDebit, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetDirectDebit() {
	o.DirectDebit.Unset()
}

// GetOverTheCounter returns the OverTheCounter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetOverTheCounter() InternalOverTheCounter {
	if o == nil || utils.IsNil(o.OverTheCounter.Get()) {
		var ret InternalOverTheCounter
		return ret
	}
	return *o.OverTheCounter.Get()
}

// GetOverTheCounterOk returns a tuple with the OverTheCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetOverTheCounterOk() (*InternalOverTheCounter, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverTheCounter.Get(), o.OverTheCounter.IsSet()
}

// HasOverTheCounter returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasOverTheCounter() bool {
	if o != nil && o.OverTheCounter.IsSet() {
		return true
	}

	return false
}

// SetOverTheCounter gets a reference to the given NullableInternalOverTheCounter and assigns it to the OverTheCounter field.
func (o *InternalPaymentMethodAllOf) SetOverTheCounter(v InternalOverTheCounter) {
	o.OverTheCounter.Set(&v)
}
// SetOverTheCounterNil sets the value for OverTheCounter to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetOverTheCounterNil() {
	o.OverTheCounter.Set(nil)
}

// UnsetOverTheCounter ensures that no value is present for OverTheCounter, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetOverTheCounter() {
	o.OverTheCounter.Unset()
}

// GetVirtualAccount returns the VirtualAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetVirtualAccount() InternalVirtualAccount {
	if o == nil || utils.IsNil(o.VirtualAccount.Get()) {
		var ret InternalVirtualAccount
		return ret
	}
	return *o.VirtualAccount.Get()
}

// GetVirtualAccountOk returns a tuple with the VirtualAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetVirtualAccountOk() (*InternalVirtualAccount, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualAccount.Get(), o.VirtualAccount.IsSet()
}

// HasVirtualAccount returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasVirtualAccount() bool {
	if o != nil && o.VirtualAccount.IsSet() {
		return true
	}

	return false
}

// SetVirtualAccount gets a reference to the given NullableInternalVirtualAccount and assigns it to the VirtualAccount field.
func (o *InternalPaymentMethodAllOf) SetVirtualAccount(v InternalVirtualAccount) {
	o.VirtualAccount.Set(&v)
}
// SetVirtualAccountNil sets the value for VirtualAccount to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetVirtualAccountNil() {
	o.VirtualAccount.Set(nil)
}

// UnsetVirtualAccount ensures that no value is present for VirtualAccount, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetVirtualAccount() {
	o.VirtualAccount.Unset()
}

// GetQrCode returns the QrCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetQrCode() InternalQRCode {
	if o == nil || utils.IsNil(o.QrCode.Get()) {
		var ret InternalQRCode
		return ret
	}
	return *o.QrCode.Get()
}

// GetQrCodeOk returns a tuple with the QrCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetQrCodeOk() (*InternalQRCode, bool) {
	if o == nil {
		return nil, false
	}
	return o.QrCode.Get(), o.QrCode.IsSet()
}

// HasQrCode returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasQrCode() bool {
	if o != nil && o.QrCode.IsSet() {
		return true
	}

	return false
}

// SetQrCode gets a reference to the given NullableInternalQRCode and assigns it to the QrCode field.
func (o *InternalPaymentMethodAllOf) SetQrCode(v InternalQRCode) {
	o.QrCode.Set(&v)
}
// SetQrCodeNil sets the value for QrCode to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetQrCodeNil() {
	o.QrCode.Set(nil)
}

// UnsetQrCode ensures that no value is present for QrCode, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetQrCode() {
	o.QrCode.Unset()
}

// GetXCallbackUrl returns the XCallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetXCallbackUrl() string {
	if o == nil || utils.IsNil(o.XCallbackUrl.Get()) {
		var ret string
		return ret
	}
	return *o.XCallbackUrl.Get()
}

// GetXCallbackUrlOk returns a tuple with the XCallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetXCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.XCallbackUrl.Get(), o.XCallbackUrl.IsSet()
}

// HasXCallbackUrl returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasXCallbackUrl() bool {
	if o != nil && o.XCallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetXCallbackUrl gets a reference to the given NullableString and assigns it to the XCallbackUrl field.
func (o *InternalPaymentMethodAllOf) SetXCallbackUrl(v string) {
	o.XCallbackUrl.Set(&v)
}
// SetXCallbackUrlNil sets the value for XCallbackUrl to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetXCallbackUrlNil() {
	o.XCallbackUrl.Set(nil)
}

// UnsetXCallbackUrl ensures that no value is present for XCallbackUrl, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetXCallbackUrl() {
	o.XCallbackUrl.Unset()
}

// GetClientType returns the ClientType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetClientType() string {
	if o == nil || utils.IsNil(o.ClientType.Get()) {
		var ret string
		return ret
	}
	return *o.ClientType.Get()
}

// GetClientTypeOk returns a tuple with the ClientType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetClientTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientType.Get(), o.ClientType.IsSet()
}

// HasClientType returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasClientType() bool {
	if o != nil && o.ClientType.IsSet() {
		return true
	}

	return false
}

// SetClientType gets a reference to the given NullableString and assigns it to the ClientType field.
func (o *InternalPaymentMethodAllOf) SetClientType(v string) {
	o.ClientType.Set(&v)
}
// SetClientTypeNil sets the value for ClientType to be an explicit nil
func (o *InternalPaymentMethodAllOf) SetClientTypeNil() {
	o.ClientType.Set(nil)
}

// UnsetClientType ensures that no value is present for ClientType, not even an explicit nil
func (o *InternalPaymentMethodAllOf) UnsetClientType() {
	o.ClientType.Unset()
}

// GetInternalMetadata returns the InternalMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternalPaymentMethodAllOf) GetInternalMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.InternalMetadata
}

// GetInternalMetadataOk returns a tuple with the InternalMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternalPaymentMethodAllOf) GetInternalMetadataOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.InternalMetadata) {
		return map[string]interface{}{}, false
	}
	return o.InternalMetadata, true
}

// HasInternalMetadata returns a boolean if a field has been set.
func (o *InternalPaymentMethodAllOf) HasInternalMetadata() bool {
	if o != nil && utils.IsNil(o.InternalMetadata) {
		return true
	}

	return false
}

// SetInternalMetadata gets a reference to the given map[string]interface{} and assigns it to the InternalMetadata field.
func (o *InternalPaymentMethodAllOf) SetInternalMetadata(v map[string]interface{}) {
	o.InternalMetadata = v
}

func (o InternalPaymentMethodAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalPaymentMethodAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Ewallet.IsSet() {
		toSerialize["ewallet"] = o.Ewallet.Get()
	}
	if o.Card.IsSet() {
		toSerialize["card"] = o.Card.Get()
	}
	if o.Cryptocurrency.IsSet() {
		toSerialize["cryptocurrency"] = o.Cryptocurrency.Get()
	}
	if o.DirectBankTransfer.IsSet() {
		toSerialize["direct_bank_transfer"] = o.DirectBankTransfer.Get()
	}
	if o.DirectDebit.IsSet() {
		toSerialize["direct_debit"] = o.DirectDebit.Get()
	}
	if o.OverTheCounter.IsSet() {
		toSerialize["over_the_counter"] = o.OverTheCounter.Get()
	}
	if o.VirtualAccount.IsSet() {
		toSerialize["virtual_account"] = o.VirtualAccount.Get()
	}
	if o.QrCode.IsSet() {
		toSerialize["qr_code"] = o.QrCode.Get()
	}
	if o.XCallbackUrl.IsSet() {
		toSerialize["x-callback-url"] = o.XCallbackUrl.Get()
	}
	if o.ClientType.IsSet() {
		toSerialize["client_type"] = o.ClientType.Get()
	}
	if o.InternalMetadata != nil {
		toSerialize["internal_metadata"] = o.InternalMetadata
	}
	return toSerialize, nil
}

type NullableInternalPaymentMethodAllOf struct {
	value *InternalPaymentMethodAllOf
	isSet bool
}

func (v NullableInternalPaymentMethodAllOf) Get() *InternalPaymentMethodAllOf {
	return v.value
}

func (v *NullableInternalPaymentMethodAllOf) Set(val *InternalPaymentMethodAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalPaymentMethodAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalPaymentMethodAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalPaymentMethodAllOf(val *InternalPaymentMethodAllOf) *NullableInternalPaymentMethodAllOf {
	return &NullableInternalPaymentMethodAllOf{value: val, isSet: true}
}

func (v NullableInternalPaymentMethodAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalPaymentMethodAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


