/*
Charge

This API is used for Charge

API version: 1.31.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentrequest

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the Invoice type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Invoice{}

// Invoice struct for Invoice
type Invoice struct {
	PartnerMetadata *InvoicePartnerMetadata `json:"partner_metadata,omitempty"`
}

// NewInvoice instantiates a new Invoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoice() *Invoice {
	this := Invoice{}
	return &this
}

// NewInvoiceWithDefaults instantiates a new Invoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceWithDefaults() *Invoice {
	this := Invoice{}
	return &this
}

// GetPartnerMetadata returns the PartnerMetadata field value if set, zero value otherwise.
func (o *Invoice) GetPartnerMetadata() InvoicePartnerMetadata {
	if o == nil || utils.IsNil(o.PartnerMetadata) {
		var ret InvoicePartnerMetadata
		return ret
	}
	return *o.PartnerMetadata
}

// GetPartnerMetadataOk returns a tuple with the PartnerMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetPartnerMetadataOk() (*InvoicePartnerMetadata, bool) {
	if o == nil || utils.IsNil(o.PartnerMetadata) {
		return nil, false
	}
	return o.PartnerMetadata, true
}

// HasPartnerMetadata returns a boolean if a field has been set.
func (o *Invoice) HasPartnerMetadata() bool {
	if o != nil && !utils.IsNil(o.PartnerMetadata) {
		return true
	}

	return false
}

// SetPartnerMetadata gets a reference to the given InvoicePartnerMetadata and assigns it to the PartnerMetadata field.
func (o *Invoice) SetPartnerMetadata(v InvoicePartnerMetadata) {
	o.PartnerMetadata = &v
}

func (o Invoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Invoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.PartnerMetadata) {
		toSerialize["partner_metadata"] = o.PartnerMetadata
	}
	return toSerialize, nil
}

type NullableInvoice struct {
	value *Invoice
	isSet bool
}

func (v NullableInvoice) Get() *Invoice {
	return v.value
}

func (v *NullableInvoice) Set(val *Invoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoice(val *Invoice) *NullableInvoice {
	return &NullableInvoice{value: val, isSet: true}
}

func (v NullableInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


