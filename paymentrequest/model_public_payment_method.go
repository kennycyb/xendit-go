/*
Charge

This API is used for Charge

API version: 1.31.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentrequest

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the PublicPaymentMethod type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PublicPaymentMethod{}

// PublicPaymentMethod struct for PublicPaymentMethod
type PublicPaymentMethod struct {
	Id string `json:"id"`
	Type PaymentMethodType `json:"type"`
	Created *string `json:"created,omitempty"`
	Updated *string `json:"updated,omitempty"`
	Description NullableString `json:"description,omitempty"`
	ReferenceId *string `json:"reference_id,omitempty"`
	Card NullableMutableCard `json:"card"`
	Cryptocurrency NullableMutableCrypto `json:"cryptocurrency,omitempty"`
	DirectBankTransfer NullableMutableDirectBankTransfer `json:"direct_bank_transfer"`
	DirectDebit NullableMutableDirectDebit `json:"direct_debit"`
	Ewallet NullableMutableEwallet `json:"ewallet"`
	OverTheCounter NullableMutableOverTheCounter `json:"over_the_counter"`
	VirtualAccount NullableInternalVirtualAccount `json:"virtual_account"`
	QrCode NullableMutableQRCode `json:"qr_code"`
	Reusability PaymentMethodReusability `json:"reusability"`
	Status PaymentMethodStatus `json:"status"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewPublicPaymentMethod instantiates a new PublicPaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicPaymentMethod(id string, type_ PaymentMethodType, card NullableMutableCard, directBankTransfer NullableMutableDirectBankTransfer, directDebit NullableMutableDirectDebit, ewallet NullableMutableEwallet, overTheCounter NullableMutableOverTheCounter, virtualAccount NullableInternalVirtualAccount, qrCode NullableMutableQRCode, reusability PaymentMethodReusability, status PaymentMethodStatus) *PublicPaymentMethod {
	this := PublicPaymentMethod{}
	this.Id = id
	this.Type = type_
	this.Card = card
	this.DirectBankTransfer = directBankTransfer
	this.DirectDebit = directDebit
	this.Ewallet = ewallet
	this.OverTheCounter = overTheCounter
	this.VirtualAccount = virtualAccount
	this.QrCode = qrCode
	this.Reusability = reusability
	this.Status = status
	return &this
}

// NewPublicPaymentMethodWithDefaults instantiates a new PublicPaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicPaymentMethodWithDefaults() *PublicPaymentMethod {
	this := PublicPaymentMethod{}
	return &this
}

// GetId returns the Id field value
func (o *PublicPaymentMethod) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PublicPaymentMethod) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PublicPaymentMethod) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *PublicPaymentMethod) GetType() PaymentMethodType {
	if o == nil {
		var ret PaymentMethodType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PublicPaymentMethod) GetTypeOk() (*PaymentMethodType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PublicPaymentMethod) SetType(v PaymentMethodType) {
	o.Type = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PublicPaymentMethod) GetCreated() string {
	if o == nil || utils.IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicPaymentMethod) GetCreatedOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PublicPaymentMethod) HasCreated() bool {
	if o != nil && !utils.IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *PublicPaymentMethod) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *PublicPaymentMethod) GetUpdated() string {
	if o == nil || utils.IsNil(o.Updated) {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicPaymentMethod) GetUpdatedOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *PublicPaymentMethod) HasUpdated() bool {
	if o != nil && !utils.IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *PublicPaymentMethod) SetUpdated(v string) {
	o.Updated = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicPaymentMethod) GetDescription() string {
	if o == nil || utils.IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PublicPaymentMethod) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PublicPaymentMethod) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PublicPaymentMethod) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PublicPaymentMethod) UnsetDescription() {
	o.Description.Unset()
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *PublicPaymentMethod) GetReferenceId() string {
	if o == nil || utils.IsNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicPaymentMethod) GetReferenceIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ReferenceId) {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *PublicPaymentMethod) HasReferenceId() bool {
	if o != nil && !utils.IsNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *PublicPaymentMethod) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetCard returns the Card field value
// If the value is explicit nil, the zero value for MutableCard will be returned
func (o *PublicPaymentMethod) GetCard() MutableCard {
	if o == nil || o.Card.Get() == nil {
		var ret MutableCard
		return ret
	}

	return *o.Card.Get()
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetCardOk() (*MutableCard, bool) {
	if o == nil {
		return nil, false
	}
	return o.Card.Get(), o.Card.IsSet()
}

// SetCard sets field value
func (o *PublicPaymentMethod) SetCard(v MutableCard) {
	o.Card.Set(&v)
}

// GetCryptocurrency returns the Cryptocurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicPaymentMethod) GetCryptocurrency() MutableCrypto {
	if o == nil || utils.IsNil(o.Cryptocurrency.Get()) {
		var ret MutableCrypto
		return ret
	}
	return *o.Cryptocurrency.Get()
}

// GetCryptocurrencyOk returns a tuple with the Cryptocurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetCryptocurrencyOk() (*MutableCrypto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cryptocurrency.Get(), o.Cryptocurrency.IsSet()
}

// HasCryptocurrency returns a boolean if a field has been set.
func (o *PublicPaymentMethod) HasCryptocurrency() bool {
	if o != nil && o.Cryptocurrency.IsSet() {
		return true
	}

	return false
}

// SetCryptocurrency gets a reference to the given NullableMutableCrypto and assigns it to the Cryptocurrency field.
func (o *PublicPaymentMethod) SetCryptocurrency(v MutableCrypto) {
	o.Cryptocurrency.Set(&v)
}
// SetCryptocurrencyNil sets the value for Cryptocurrency to be an explicit nil
func (o *PublicPaymentMethod) SetCryptocurrencyNil() {
	o.Cryptocurrency.Set(nil)
}

// UnsetCryptocurrency ensures that no value is present for Cryptocurrency, not even an explicit nil
func (o *PublicPaymentMethod) UnsetCryptocurrency() {
	o.Cryptocurrency.Unset()
}

// GetDirectBankTransfer returns the DirectBankTransfer field value
// If the value is explicit nil, the zero value for MutableDirectBankTransfer will be returned
func (o *PublicPaymentMethod) GetDirectBankTransfer() MutableDirectBankTransfer {
	if o == nil || o.DirectBankTransfer.Get() == nil {
		var ret MutableDirectBankTransfer
		return ret
	}

	return *o.DirectBankTransfer.Get()
}

// GetDirectBankTransferOk returns a tuple with the DirectBankTransfer field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetDirectBankTransferOk() (*MutableDirectBankTransfer, bool) {
	if o == nil {
		return nil, false
	}
	return o.DirectBankTransfer.Get(), o.DirectBankTransfer.IsSet()
}

// SetDirectBankTransfer sets field value
func (o *PublicPaymentMethod) SetDirectBankTransfer(v MutableDirectBankTransfer) {
	o.DirectBankTransfer.Set(&v)
}

// GetDirectDebit returns the DirectDebit field value
// If the value is explicit nil, the zero value for MutableDirectDebit will be returned
func (o *PublicPaymentMethod) GetDirectDebit() MutableDirectDebit {
	if o == nil || o.DirectDebit.Get() == nil {
		var ret MutableDirectDebit
		return ret
	}

	return *o.DirectDebit.Get()
}

// GetDirectDebitOk returns a tuple with the DirectDebit field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetDirectDebitOk() (*MutableDirectDebit, bool) {
	if o == nil {
		return nil, false
	}
	return o.DirectDebit.Get(), o.DirectDebit.IsSet()
}

// SetDirectDebit sets field value
func (o *PublicPaymentMethod) SetDirectDebit(v MutableDirectDebit) {
	o.DirectDebit.Set(&v)
}

// GetEwallet returns the Ewallet field value
// If the value is explicit nil, the zero value for MutableEwallet will be returned
func (o *PublicPaymentMethod) GetEwallet() MutableEwallet {
	if o == nil || o.Ewallet.Get() == nil {
		var ret MutableEwallet
		return ret
	}

	return *o.Ewallet.Get()
}

// GetEwalletOk returns a tuple with the Ewallet field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetEwalletOk() (*MutableEwallet, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ewallet.Get(), o.Ewallet.IsSet()
}

// SetEwallet sets field value
func (o *PublicPaymentMethod) SetEwallet(v MutableEwallet) {
	o.Ewallet.Set(&v)
}

// GetOverTheCounter returns the OverTheCounter field value
// If the value is explicit nil, the zero value for MutableOverTheCounter will be returned
func (o *PublicPaymentMethod) GetOverTheCounter() MutableOverTheCounter {
	if o == nil || o.OverTheCounter.Get() == nil {
		var ret MutableOverTheCounter
		return ret
	}

	return *o.OverTheCounter.Get()
}

// GetOverTheCounterOk returns a tuple with the OverTheCounter field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetOverTheCounterOk() (*MutableOverTheCounter, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverTheCounter.Get(), o.OverTheCounter.IsSet()
}

// SetOverTheCounter sets field value
func (o *PublicPaymentMethod) SetOverTheCounter(v MutableOverTheCounter) {
	o.OverTheCounter.Set(&v)
}

// GetVirtualAccount returns the VirtualAccount field value
// If the value is explicit nil, the zero value for InternalVirtualAccount will be returned
func (o *PublicPaymentMethod) GetVirtualAccount() InternalVirtualAccount {
	if o == nil || o.VirtualAccount.Get() == nil {
		var ret InternalVirtualAccount
		return ret
	}

	return *o.VirtualAccount.Get()
}

// GetVirtualAccountOk returns a tuple with the VirtualAccount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetVirtualAccountOk() (*InternalVirtualAccount, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualAccount.Get(), o.VirtualAccount.IsSet()
}

// SetVirtualAccount sets field value
func (o *PublicPaymentMethod) SetVirtualAccount(v InternalVirtualAccount) {
	o.VirtualAccount.Set(&v)
}

// GetQrCode returns the QrCode field value
// If the value is explicit nil, the zero value for MutableQRCode will be returned
func (o *PublicPaymentMethod) GetQrCode() MutableQRCode {
	if o == nil || o.QrCode.Get() == nil {
		var ret MutableQRCode
		return ret
	}

	return *o.QrCode.Get()
}

// GetQrCodeOk returns a tuple with the QrCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetQrCodeOk() (*MutableQRCode, bool) {
	if o == nil {
		return nil, false
	}
	return o.QrCode.Get(), o.QrCode.IsSet()
}

// SetQrCode sets field value
func (o *PublicPaymentMethod) SetQrCode(v MutableQRCode) {
	o.QrCode.Set(&v)
}

// GetReusability returns the Reusability field value
func (o *PublicPaymentMethod) GetReusability() PaymentMethodReusability {
	if o == nil {
		var ret PaymentMethodReusability
		return ret
	}

	return o.Reusability
}

// GetReusabilityOk returns a tuple with the Reusability field value
// and a boolean to check if the value has been set.
func (o *PublicPaymentMethod) GetReusabilityOk() (*PaymentMethodReusability, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reusability, true
}

// SetReusability sets field value
func (o *PublicPaymentMethod) SetReusability(v PaymentMethodReusability) {
	o.Reusability = v
}

// GetStatus returns the Status field value
func (o *PublicPaymentMethod) GetStatus() PaymentMethodStatus {
	if o == nil {
		var ret PaymentMethodStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PublicPaymentMethod) GetStatusOk() (*PaymentMethodStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PublicPaymentMethod) SetStatus(v PaymentMethodStatus) {
	o.Status = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicPaymentMethod) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicPaymentMethod) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || utils.IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PublicPaymentMethod) HasMetadata() bool {
	if o != nil && utils.IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *PublicPaymentMethod) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o PublicPaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicPaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	if !utils.IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !utils.IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !utils.IsNil(o.ReferenceId) {
		toSerialize["reference_id"] = o.ReferenceId
	}
	toSerialize["card"] = o.Card.Get()
	if o.Cryptocurrency.IsSet() {
		toSerialize["cryptocurrency"] = o.Cryptocurrency.Get()
	}
	toSerialize["direct_bank_transfer"] = o.DirectBankTransfer.Get()
	toSerialize["direct_debit"] = o.DirectDebit.Get()
	toSerialize["ewallet"] = o.Ewallet.Get()
	toSerialize["over_the_counter"] = o.OverTheCounter.Get()
	toSerialize["virtual_account"] = o.VirtualAccount.Get()
	toSerialize["qr_code"] = o.QrCode.Get()
	toSerialize["reusability"] = o.Reusability
	toSerialize["status"] = o.Status
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePublicPaymentMethod struct {
	value *PublicPaymentMethod
	isSet bool
}

func (v NullablePublicPaymentMethod) Get() *PublicPaymentMethod {
	return v.value
}

func (v *NullablePublicPaymentMethod) Set(val *PublicPaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicPaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicPaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicPaymentMethod(val *PublicPaymentMethod) *NullablePublicPaymentMethod {
	return &NullablePublicPaymentMethod{value: val, isSet: true}
}

func (v NullablePublicPaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicPaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


