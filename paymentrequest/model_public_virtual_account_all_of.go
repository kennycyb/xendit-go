/*
Charge

This API is used for Charge

API version: 1.31.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentrequest

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the PublicVirtualAccountAllOf type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PublicVirtualAccountAllOf{}

// PublicVirtualAccountAllOf struct for PublicVirtualAccountAllOf
type PublicVirtualAccountAllOf struct {
	AlternativeDisplays []VirtualAccountAlternativeDisplay `json:"alternative_displays,omitempty"`
}

// NewPublicVirtualAccountAllOf instantiates a new PublicVirtualAccountAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicVirtualAccountAllOf() *PublicVirtualAccountAllOf {
	this := PublicVirtualAccountAllOf{}
	return &this
}

// NewPublicVirtualAccountAllOfWithDefaults instantiates a new PublicVirtualAccountAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicVirtualAccountAllOfWithDefaults() *PublicVirtualAccountAllOf {
	this := PublicVirtualAccountAllOf{}
	return &this
}

// GetAlternativeDisplays returns the AlternativeDisplays field value if set, zero value otherwise.
func (o *PublicVirtualAccountAllOf) GetAlternativeDisplays() []VirtualAccountAlternativeDisplay {
	if o == nil || utils.IsNil(o.AlternativeDisplays) {
		var ret []VirtualAccountAlternativeDisplay
		return ret
	}
	return o.AlternativeDisplays
}

// GetAlternativeDisplaysOk returns a tuple with the AlternativeDisplays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicVirtualAccountAllOf) GetAlternativeDisplaysOk() ([]VirtualAccountAlternativeDisplay, bool) {
	if o == nil || utils.IsNil(o.AlternativeDisplays) {
		return nil, false
	}
	return o.AlternativeDisplays, true
}

// HasAlternativeDisplays returns a boolean if a field has been set.
func (o *PublicVirtualAccountAllOf) HasAlternativeDisplays() bool {
	if o != nil && !utils.IsNil(o.AlternativeDisplays) {
		return true
	}

	return false
}

// SetAlternativeDisplays gets a reference to the given []VirtualAccountAlternativeDisplay and assigns it to the AlternativeDisplays field.
func (o *PublicVirtualAccountAllOf) SetAlternativeDisplays(v []VirtualAccountAlternativeDisplay) {
	o.AlternativeDisplays = v
}

func (o PublicVirtualAccountAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicVirtualAccountAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.AlternativeDisplays) {
		toSerialize["alternative_displays"] = o.AlternativeDisplays
	}
	return toSerialize, nil
}

type NullablePublicVirtualAccountAllOf struct {
	value *PublicVirtualAccountAllOf
	isSet bool
}

func (v NullablePublicVirtualAccountAllOf) Get() *PublicVirtualAccountAllOf {
	return v.value
}

func (v *NullablePublicVirtualAccountAllOf) Set(val *PublicVirtualAccountAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicVirtualAccountAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicVirtualAccountAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicVirtualAccountAllOf(val *PublicVirtualAccountAllOf) *NullablePublicVirtualAccountAllOf {
	return &NullablePublicVirtualAccountAllOf{value: val, isSet: true}
}

func (v NullablePublicVirtualAccountAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicVirtualAccountAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


