/*
Charge

This API is used for Charge

API version: 1.31.0
*/

// Code generated by OpenAPI Generator; DO NOT EDIT.

package paymentrequest

import (
	"encoding/json"
	
	
	utils "github.com/kennycyb/xendit-go/utils"
	
)

// checks if the PublicPaymentRequestAuthorize type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &PublicPaymentRequestAuthorize{}

// PublicPaymentRequestAuthorize struct for PublicPaymentRequestAuthorize
type PublicPaymentRequestAuthorize struct {
	AuthCode string `json:"auth_code"`
}

// NewPublicPaymentRequestAuthorize instantiates a new PublicPaymentRequestAuthorize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicPaymentRequestAuthorize(authCode string) *PublicPaymentRequestAuthorize {
	this := PublicPaymentRequestAuthorize{}
	this.AuthCode = authCode
	return &this
}

// NewPublicPaymentRequestAuthorizeWithDefaults instantiates a new PublicPaymentRequestAuthorize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicPaymentRequestAuthorizeWithDefaults() *PublicPaymentRequestAuthorize {
	this := PublicPaymentRequestAuthorize{}
	return &this
}

// GetAuthCode returns the AuthCode field value
func (o *PublicPaymentRequestAuthorize) GetAuthCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthCode
}

// GetAuthCodeOk returns a tuple with the AuthCode field value
// and a boolean to check if the value has been set.
func (o *PublicPaymentRequestAuthorize) GetAuthCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthCode, true
}

// SetAuthCode sets field value
func (o *PublicPaymentRequestAuthorize) SetAuthCode(v string) {
	o.AuthCode = v
}

func (o PublicPaymentRequestAuthorize) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicPaymentRequestAuthorize) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auth_code"] = o.AuthCode
	return toSerialize, nil
}

type NullablePublicPaymentRequestAuthorize struct {
	value *PublicPaymentRequestAuthorize
	isSet bool
}

func (v NullablePublicPaymentRequestAuthorize) Get() *PublicPaymentRequestAuthorize {
	return v.value
}

func (v *NullablePublicPaymentRequestAuthorize) Set(val *PublicPaymentRequestAuthorize) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicPaymentRequestAuthorize) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicPaymentRequestAuthorize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicPaymentRequestAuthorize(val *PublicPaymentRequestAuthorize) *NullablePublicPaymentRequestAuthorize {
	return &NullablePublicPaymentRequestAuthorize{value: val, isSet: true}
}

func (v NullablePublicPaymentRequestAuthorize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicPaymentRequestAuthorize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


